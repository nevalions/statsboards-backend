server {
    listen 80;
    server_name statsboard.ru www.statsboard.ru statsboard.online www.statsboard.online;

    location / {
        return 301 https://$host$request_uri;
    }

    location /api/ {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name statsboard.ru www.statsboard.ru statsboard.online www.statsboard.online;

    ssl_certificate /etc/letsencrypt/live/statsboard.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/statsboard.ru/privkey.pem;

    # Serve Angular frontend by proxying to the frontend container
    location / {
        proxy_pass http://statsboards-frontend-nginx-static-server:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /nginx-health {
        return 200 'Nginx is running (HTTPS)';
        add_header Content-Type text/plain;
        add_header X-Health-Status "ok";
    }

    # Backend health check
    location = /api/health {
        proxy_pass https://statsboards-backend:9000/health;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
    }

    # Proxy API requests to the backend
    location /api/ {
        proxy_pass https://statsboards-backend:9000;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # WebSocket Proxy
    location ~ ^/api/matches/ws/id/([^/]+)/([^/]+)/ {
        proxy_pass https://statsboards-backend:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Static backend files handling
    location /static/ {
        proxy_pass http://statsboards-backend-static-nginx:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static nginx backend health check
    location = /static-health {
        proxy_pass http://statsboards-backend-static-nginx:8080/nginx-health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

#     # Serve static uploads
#     location /static/uploads/ {
#         alias /usr/share/nginx/static/uploads/;
#     }
#
#     # Serve static
#     location /static/ {
#         alias /usr/share/nginx/static/;
#     }
#}


     # Serve Angular frontend
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }