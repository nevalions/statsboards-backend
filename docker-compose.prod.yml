version: '3.8'

networks:
  backend-network:
    external: true
  frontend-network:
    external: true
  custom_bridge:
    driver: bridge # need to connect to postgres on local network

volumes:
  poetry-cache:
  static-files:
    driver: local
    driver_opts:
      type: none
      device: ./static  # Bind to local ./static directory
      o: bind
  certbot-etc:
  webroot:

services:
  nginx-init:
    labels:
      logging: "promtail"
      logging_jobname: "backend_nginx_init_logs_80"
    container_name: statsboards-nginx-init
    volumes:
      - webroot:/var/lib/letsencrypt
    build:
      context: .
      dockerfile: Dockerfile.nginx.init
    ports:
      - "80:80"
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs --fail http://localhost/nginx-init-health | grep -q '\"status\": \"ok\"'" ]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always

  certbot:
    labels:
      logging: "promtail"
      logging_jobname: "certbot-renewal_logs"
    build:
      context: .
      dockerfile: Dockerfile.certbot
    container_name: certbot-renewal
    volumes:
      - certbot-etc:/etc/letsencrypt
      - webroot:/var/lib/letse ncrypt:rw
    depends_on:
      - nginx-init

  nginx-ssl:
    labels:
      logging: "promtail"
      logging_jobname: "statsboards_backend_nginx_logs_443"
    container_name: statsboards-backend-prod-nginx-ssl
    build:
      context: .
      dockerfile: Dockerfile.nginx
    volumes:
      - certbot-etc:/etc/letsencrypt
      - webroot:/var/lib/letsencrypt
    ports:
      - "443:443"
    depends_on:
      - certbot
    networks:
      - backend-network
      - frontend-network
      - custom_bridge
    healthcheck:
      test: [ "CMD-SHELL", "curl -ks --fail https://localhost/back-nginx-health | grep -q '\"status\": \"ok\"'" ]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always

  statsboards-backend:
    labels:
      logging: "promtail"
      logging_jobname: "statsboards_backend_prod_logs"
    image: statsboards-backend-prod:latest
    container_name: statsboards-backend-prod-container
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: poetry run python run_prod_server.py
    ports:
      - "9000:9000"
    volumes:
      - certbot-etc:/etc/letsencrypt
      - static-files:/app/static:rw  # Read-write access for backend
      - poetry-cache:/root/.cache/pypoetry
    env_file:
      - .env.prod
    networks:
      - backend-network
      - frontend-network
      - custom_bridge
    depends_on:
      - certbot
    restart: always

  nginx-static:
    labels:
      logging: "promtail"
      logging_jobname: "statsboards_backend_static_nginx_logs"
    container_name: statsboards-backend-static-nginx
    build:
      context: .
      dockerfile: Dockerfile.nginx.static
    volumes:
      - certbot-etc:/etc/letsencrypt
      - static-files:/usr/share/nginx/static:ro  # Read-only access for nginx
    ports:
      - "8080:8080"
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -ks --fail http://localhost:8080/back-static-nginx-health | grep -q '\"status\": \"ok\"'" ]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      - statsboards-backend
      - certbot
    restart: always